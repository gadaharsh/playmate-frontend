.phoneContainer {
  display: flex;
  flex-direction: row;
  background-color: aliceblue;
}

.errorLabel {
  color: #1da1f2;
}

.logoStyle {
  display: block;
  text-align: center;
}

.centerText {
  text-align: center;
}

.otpInputStyle {
  width: 3rem;
  height: 2.5rem;
  margin: 0 1rem;
  font-size: 2rem;
  border-radius: 4px;
}

@media screen and (max-width: 590px) {
  .otpInputStyle {
    width: 1.25rem;
    height: 1.9rem;
    margin: 0 0.5rem;
    font-size: 1.5rem;
    border-radius: 4px;
  }
}

:root {
  /* generic */
  --gutterSm: 0.8rem;
  --gutterMd: 0.8rem;
  --gutterLg: 0.8rem;
  --gutterXl: 0.8rem;
  --gutterXx: 0.8rem;
  --colorPrimary400: #96e4df;
  --colorPrimary600: #4dccc6;
  --colorPrimary800: #9eabe4;
  --fontFamily: "Dosis", sans-serif;
  --fontSizeSm: 1rem;
  --fontSizeMd: 1rem;
  --fontSizeLg: 1rem;
  --fontSizeXl: 1.2rem;
  --fontSizeXx: 1.5rem;
  --lineHeightSm: 1.1;
  --lineHeightMd: 1.1;
  --transitionDuration: 300ms;
  --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);

  /* floated labels */
  --inputPaddingV: var(--gutterMd);
  --inputPaddingH: var(--gutterLg);
  --inputFontSize: var(--fontSizeLg);
  --inputLineHeight: var(--lineHeightMd);
  --labelScaleFactor: 0.8;
  --labelDefaultPosY: 50%;
  --labelTransformedPosY: calc(
    (var(--labelDefaultPosY)) - (var(--inputPaddingV) * var(--labelScaleFactor)) -
      (var(--inputFontSize) * var(--inputLineHeight))
  );
  --inputTransitionDuration: var(--transitionDuration);
  --inputTransitionTF: var(--transitionTF);
}

.signupSpace {
  align-items: center;
  background-color: #ecf3f3;
  padding: 15px;
  margin-top: 25px;
  border-radius: 15px;
}

.Input {
  position: relative;
  margin-top: 19px;
  margin-right: 25px;
}

.Input-text::placeholder {
  color: #101010;
}

.Input-text:focus {
  outline: none;
  box-shadow: 0.2rem 0.8rem 1.6rem var(--colorPrimary600);
}

.Input-label {
  display: block;
  bottom: 50%;
  left: 1rem;
  color: #fff;
  font-family: inherit;
  font-size: var(--inputFontSize);
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  opacity: 0;
  transform: translate3d(0, var(--labelDefaultPosY), 0) scale(1);
  transform-origin: 0 0;
  transition: opacity var(--inputTransitionDuration) var(--inputTransitionTF),
    transform var(--inputTransitionDuration) var(--inputTransitionTF),
    visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF),
    z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF);
}

.Input-text:placeholder-shown + .Input-label {
  visibility: hidden;
  z-index: -1;
}

.Input-text:not(:placeholder-shown) + .Input-label,
.Input-text:focus:not(:placeholder-shown) + .Input-label {
  visibility: visible;
  z-index: 1;
  opacity: 1;
  transform: translate3d(0, var(--labelTransformedPosY), 0)
    scale(var(--labelScaleFactor));
  transition: transform var(--inputTransitionDuration), visibility 0ms,
    z-index 0ms;
}

.Input-text {
  display: block;
  margin: 0;
  padding: var(--inputPaddingV) var(--inputPaddingH);
  color: inherit;
  width: 100%;
  font-family: inherit;
  font-size: var(--inputFontSize);
  font-weight: inherit;
  line-height: var(--inputLineHeight);
  border: none;
  border-radius: 0.4rem;
  transition: box-shadow var(--transitionDuration);
}

.signupContainer {
  display: flex;
  flex: 1;
  flex-direction: column;
  background: white;
  align-items: center;
}
.GenderSelection {
  display: flex;
  justify-content:center;
  align-items: center;
  margin:0 auto;
  padding: 1rem;
}

.GenderSelection img{
  width: 45px;
  height: 45px;
}
/* Gender selection css */
/* 
.GenderSelection input[name="gender"] {
	display: none;
	&[value="male"]:checked {
		~ .genderIcon {
			transform: rotate(45deg);
			&:before {
				opacity: 1; visibility: visible;
			}
			&:after {
				content: '';
				display: block;
				position: absolute;
				top: 0; left: 50%;
				transform: translate(-50%, -1.2em);
				border: .35em solid transparent;
				border-bottom-color: currentcolor;
			}
		}
	}
	&[value="female"]:checked{
		~ .genderIcon {
			transform: rotate(180deg);
			&:before {
				opacity: 1; visibility: visible;
			}
			&:after {
				content: '';
				display: block;
				position: absolute;
				width: .5em; height: .2em;
				top: 0; left: 50%;
				background: currentcolor;
				transform: translate(-50%, -.5em);
			}
		}
	}
}


		
.genderIcon {
	display: inline-block;
	width: 1em;
	height: 1em;
	border: .2em solid currentcolor;
	border-radius: 50%;
	position: relative;
	transition: transform .3s;
	vertical-align: bottom;
	margin: 0 .3em;
	&:before {
		content: '';
		display: block;
		width: .2em; height: .7em;
		background: currentcolor;
		position: absolute;
		bottom: 100%;
		left: calc(50% - .1em);
		opacity: 0; visibility: hidden;
		transition: transform .3s;
	}
	&:after {
		content: '';
		display: block;
		position: absolute;
	}
} */
